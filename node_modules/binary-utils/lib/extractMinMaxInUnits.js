'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _durationUnits = require('./durationUnits');

var _durationUnits2 = _interopRequireDefault(_durationUnits);

var _splitSecsToUnits = require('./splitSecsToUnits');

var _splitSecsToUnits2 = _interopRequireDefault(_splitSecsToUnits);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (minInSecs, maxInSecs) {
    // block is a structure that describe min and max of specific time unit
    var blockIsValid = function blockIsValid(minArg, maxArg, unit) {
        if (maxArg <= 1) {
            return false;
        }
        switch (unit) {
            case 's':
                return minArg < 60;
            case 'm':
                return minArg < 60;
            case 'h':
                return minArg < 24;
            case 'd':
                return true;
            default:
                throw new Error('Invalid time unit');
        }
    };
    var minInUnits = (0, _splitSecsToUnits2.default)(minInSecs);
    var maxInUnits = (0, _splitSecsToUnits2.default)(maxInSecs);

    var durations = [];
    for (var i = 0; i < minInUnits.length; i++) {
        var unit = _durationUnits2.default[i + 1];
        var minI = minInUnits[i];
        var maxI = maxInUnits[i];
        if (blockIsValid(minI, maxI, unit)) {
            durations.push({
                unit: unit,
                min: minI > 0 ? minI : 1,
                max: maxI });
        }
    }
    return durations;
};